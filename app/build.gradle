
plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-android-extensions'
    id 'kotlin-kapt'
}


android {
    namespace build_versions.applicationId
    compileSdk build_versions.compile_sdk

    defaultConfig {
        applicationId build_versions.applicationId
        minSdk build_versions.min_sdk
        targetSdk build_versions.target_sdk
        versionCode build_versions.version_code
        versionName build_versions.version_name
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        multiDexEnabled true

        javaCompileOptions {
            annotationProcessorOptions {
                arguments += [
                        "room.schemaLocation"  : "$projectDir/schemas".toString(),
                        "room.incremental"     : "true",
                        "room.expandProjection": "true"]
            }
        }
    }

    def releaseFile = file(build_key.keystoreReleaseFilepath)
    def debugFile = file(build_key.keystoreDebugFilepath)
    signingConfigs {
        release {
            storeFile releaseFile
            keyAlias build_key.keystoreAlias
            storePassword build_key.keystorePSW
            keyPassword build_key.keystoreAliasPSW
        }
        beta {
            storeFile debugFile
            keyAlias build_key.debugKeystoreAlias
            storePassword build_key.keystorePSW
            keyPassword build_key.keystoreAliasPSW
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            zipAlignEnabled true
            shrinkResources true
            resValue "string", "app_name", "玩Android"
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            if (releaseFile.exists()) {
                println("WITH -> buildTypes -> release: using jks key")
                signingConfig signingConfigs.release
            } else {
                println("WITH -> buildTypes -> release: using default key")
            }
        }

        debug {
            minifyEnabled false
            applicationIdSuffix '.debug'
            resValue "string", "app_name", "玩Android-Debug"
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            if (debugFile.exists()) {
                println("WITH -> buildTypes -> debug: using jks key")
                signingConfig signingConfigs.beta
            } else {
                println("WITH -> buildTypes -> debug: using default key")
            }

        }
    }

    android.applicationVariants.all { variant ->
        variant.outputs.all {
            def buildTime = project.hasProperty('BUILD_TIME') ? BUILD_TIME : new Date().format("yyyyMMddHHmm", TimeZone.getTimeZone("GMT+08:00"))

            if (variant.buildType.name == 'debug') {
                outputFileName = "玩Android-${variant.baseName}-${versionName}-${buildTime}.apk"
            }
            if (variant.buildType.name == 'release') {
                outputFileName = "玩Android-${variant.baseName}-${versionName}-${buildTime}.apk"
            }
        }
    }

    dataBinding.enabled = true

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.appcompat:appcompat:1.4.1'
    implementation 'com.google.android.material:material:1.5.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.3'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'

    /*=================================协程================================================*/
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.5.0"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:1.5.0"
    /*=================================协程================================================*/

    /*===============================页面导航==============================================*/
    implementation 'androidx.navigation:navigation-fragment:2.3.5'
    implementation 'androidx.navigation:navigation-ui:2.3.5'
    /*===============================页面导航==============================================*/

    /*================================数据库===============================================*/
    implementation 'androidx.room:room-runtime:2.4.3'
    kapt 'androidx.room:room-compiler:2.4.3'
    debugImplementation 'com.amitshekhar.android:debug-db:1.0.6'
    /*================================数据库===============================================*/

    /*===============================lifecycle============================================*/
    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.4.0'
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.4.0'
    /*===============================lifecycle============================================*/

    /*================================网络请求==============================================*/
    implementation "com.squareup.retrofit2:retrofit:2.9.0"
    implementation "com.squareup.retrofit2:converter-gson:2.9.0"
    implementation "com.squareup.retrofit2:converter-scalars:2.9.0"
    implementation "com.squareup.retrofit2:adapter-rxjava:2.9.0"
    implementation "com.squareup.okhttp3:okhttp:4.9.1"
    implementation 'com.squareup.retrofit2:converter-moshi:2.9.0'
    /*================================网络请求==============================================*/

    /*================================数据解析==============================================*/
    implementation 'com.squareup.moshi:moshi-kotlin:1.12.0'
    /*================================数据解析==============================================*/

    /*================================网络检查==============================================*/
    debugImplementation 'com.readystatesoftware.chuck:library:1.1.0'
    releaseImplementation 'com.readystatesoftware.chuck:library-no-op:1.1.0'
    /*================================网络检查==============================================*/

    /*================================图片加载==============================================*/
    implementation "com.github.bumptech.glide:glide:4.11.0"
    annotationProcessor "com.github.bumptech.glide:compiler:4.11.0"
    implementation "com.github.bumptech.glide:okhttp3-integration:4.11.0"
    implementation "com.caverock:androidsvg-aar:1.3"
    /*================================图片加载==============================================*/

    /*================================轮播图================================================*/
    implementation 'com.github.xiaohaibin:XBanner:androidx_v1.0.8'
    /*=================================轮播图===============================================*/

    /*================================Tab指示器=============================================*/
    implementation 'com.github.hackware1993:MagicIndicator:1.7.0'
    /*================================Tab指示器=============================================*/

    /*===============================上下拉刷新===============================================*/
    implementation 'com.scwang.smart:refresh-layout-kernel:2.0.3'
    implementation 'com.scwang.smart:refresh-header-classics:2.0.3'
    implementation 'com.scwang.smart:refresh-footer-classics:2.0.3'
    /*===============================上下拉刷新===============================================*/

    /*==============================第三方App分享============================================*/
    implementation 'com.tencent.tauth:qqopensdk:3.51.1'
    implementation 'io.github.sinaweibosdk:core:11.12.0@aar'
    implementation 'com.tencent.mm.opensdk:wechat-sdk-android-without-mta:6.6.4'
    /*==============================第三方App分享=============================================*/

    implementation 'org.aspectj:aspectjrt:1.9.6'

    implementation 'com.github.Baseflow:PhotoView:2.3.0'

    /*===============================二维码相关===============================================*/
    implementation 'com.google.zxing:core:3.3.2'
    /*===============================二维码相关===============================================*/


}

import org.aspectj.bridge.IMessage
import org.aspectj.bridge.MessageHandler
import org.aspectj.tools.ajc.Main



final def log = project.logger
final def variants = project.android.applicationVariants

variants.all { variant ->
    if (!variant.buildType.isDebuggable()) {
        log.debug("Skipping non-debuggable build type '${variant.buildType.name}'.")
        return;
    }
    JavaCompile javaCompile = variant.javaCompile
    javaCompile.doLast {
        String[] args = ["-showWeaveInfo",
                         "-1.8",
                         "-inpath", javaCompile.destinationDir.toString(),
                         "-aspectpath", javaCompile.classpath.asPath,
                         "-d", javaCompile.destinationDir.toString(),
                         "-classpath", javaCompile.classpath.asPath,
                         "-bootclasspath", project.android.bootClasspath.join(File.pathSeparator)]
        log.debug "ajc args: " + Arrays.toString(args)
        MessageHandler handler = new MessageHandler(true);
        new Main().run(args, handler);
        for (IMessage message : handler.getMessages(null, true)) {
            switch (message.getKind()) {
                case IMessage.ABORT:
                case IMessage.ERROR:
                case IMessage.FAIL:
                    log.error message.message, message.thrown
                    break;
                case IMessage.WARNING:
                    log.warn message.message, message.thrown
                    break;
                case IMessage.INFO:
                    log.info message.message, message.thrown
                    break;
                case IMessage.DEBUG:
                    log.debug message.message, message.thrown
                    break;
            }
        }
    }
}
